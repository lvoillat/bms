%implements s13_b0_qospi_6_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%<SLibCG_SetDWV(9, 0, 13, 1, "", -1, "", 0, "0U")>\
%<SLibCG_SetDWV(10, 0, 13, 1, "", -1, "", 0, "soc0_IN_NO_ACTIVE_CHILD")>\
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[4], "Initialize",0)
/* InitializeConditions for Chart: '<S8>/Chart' incorporates:
 *  InitializeConditions for SubSystem: '<S8>/CdegradeCalc'
 */
%if SLibCG_SystemFcnArgAccessed("soc0_CdegradeCalc_Init",4,0)
%<SLibCG_AccessArg(6 ,1, 0)>
%endif

%<SLibCGIRGenReusableSysCall("soc0_CdegradeCalc_Init", ["%<tSimStruct>"], 4, 0, 3, 0, 3, 13)>\
%endif
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[6].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Initialize", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))
%<SLibCG_AccessArg(6, 1, 0)>
%endif
%if SLibCG_ArgAccessed(6, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Initialize", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Initialize"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(6, 1, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void soc0_key_on_Init(\
%assign comma = ""
%if SLibCG_ArgAccessed(6, 1, 0)
%<comma>%<tSimStructType> * const %<tSimStruct>\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(6, 1, fcnProtoType)>
%endfunction
