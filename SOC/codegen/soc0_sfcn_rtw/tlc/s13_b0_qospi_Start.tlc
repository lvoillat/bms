%implements s13_b0_qospi_Start "C"

%function Start(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
int32_T i;
B_soc0_T *_rtB;
%closefile localVarDecl
%assign _modelSS = ""

%<SLibCG_TrackBlockIO(13)>\
_rtB = %<(SLibCG_SE(SLibGetBlockIOStructPtr()))>;
%<SLibCG_TrackEO(6)>\
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Start",0)
/* Start for Atomic SubSystem: '<Root>/soc' */
/* Start for Chart: '<S1>/Chart' incorporates:
 *  Start for SubSystem: '<S1>/key_on'
 */
%if SLibCG_SystemFcnArgAccessed("soc0_key_on_Start",8,0)
%<SLibCG_AccessArg(7 ,0, 0)>
%endif

%<SLibCGIRGenReusableSysCall("soc0_key_on_Start", ["%<tSimStruct>"], 8, 0, 0, 0, 0, 13)>\

%endif
/* Start for Merge: '<S1>/Merge1' */
_rtB->Merge1 = 0.0;
/* Start for DataStoreMemory: '<S1>/Data Store Memory2' */
%<SLibCG_SetDWV(5, 0, 13, 1, "", -1, "", 0, "0.0")>\
for (i = 0; i < 40; i++) {
    /* Start for Merge: '<S1>/Merge2' */
    _rtB->Merge2[i] = 0.0;
    /* Start for DataStoreMemory: '<S1>/Data Store Memory' */
%<SLibCG_SetDWV(3, 0, 13, 40, "", -1, "i", 0, "%<(SLibCGIR_PV(12, 0, 13, 40, "", -1, "i", 0))>")>\
    /* Start for DataStoreMemory: '<S1>/Data Store Memory1' */
%<SLibCG_SetDWV(4, 0, 13, 40, "", -1, "i", 0, "%<(SLibCGIR_PV(12, 0, 13, 40, "", -1, "i", 0))>")>\
    /* Start for DataStoreMemory: '<S1>/Data Store Memory3' */
%<SLibCG_SetDWV(6, 0, 13, 40, "", -1, "i", 0, "%<(SLibCGIR_PV(13, 0, 13, 40, "", -1, "i", 0))>")>\
    /* Start for Outport: '<Root>/soc_C_factor' */
    ((real_T *)ssGetOutputPortSignal(%<tSimStruct>, 6))[i] = _rtB->OutportBufferForcapacity_degrad[i];
}
/* End of Start for SubSystem: '<Root>/soc' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[7].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Start", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Start"))
%<SLibCG_AccessArg(7, 0, 0)>
%endif
%if SLibCG_ArgAccessed(7, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Start", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Start"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(7, 0, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Start(\
%assign comma = ""
%<comma>%<tSimStructType> *%<tSimStruct>\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(7, 0, fcnProtoType)>
%<LibSetSystemField(system, "CachedStartLocalVars", localVarDecl)>
%endfunction
